sudo pip3 install ansible
ansible-inventory --list #list of ansible inventory
ansible-inventory --graph
ansible-inventory --list --refresh-cache
ansible --version 
ansible all -m setup #ansible for ALL servers -m (module) - setup (list of setups on servers)
ansible all -m shell -a "uptime" #-a - argument "uptime" for all servers
ansible all -m copy -a "src=privet.txt dest=/home/ec2-user mode=777" ### copy from ansible master server (source privet.txt. destination home/ec2-user, with mode 777"
ansible all -m copy -a "src=privet.txt dest=/home/ec2-user mode=777" ### copy from ansible master server (source privet.txt. destination home/ec2-user, with mode 777" -b ( -b is SUDO if destination directory is /home)
ansible all -m file -a "path=/home/ec2-user/privet.txt state=absent" ### remove file from all servers (state=absent is deleting)
ansible all -m get_url -a "url=###link dest=/home/ec2-user" -b ### Download any file/app to all servers from internet
ansible all -m uri -a "url=https://www.adv-it.net return_content=yes" # read pages from internet
ansible all -m yum -a "name=httpd state=latest" -b ### intastall apache on all servers
ansible all -m service -a "name=httpd state=started enabled=yes" -b ### start web server when instance in starting
ansible-playbook playbook.yml #### run playbooks
ansible-galaxy init *name* ### create roles 
ansible-playbook playbook_jinja.yml --extra-var "MYHOSTS=PROD" ### {{ MYHOSTS }} write in playbook hosts 
ansible-vault create *name*
ansible-vault view
ansible-vault edit
ansible-vault rekey ### new password
ansible-vault encrypt **** ### zashifruvaty file
ansible-vault decrypt **** ### rozshifrovat file
ansible-playbook playbook_vault.yml --ask-vault-pass ### run vaulted playbook, with ask a password
ansible-playbook **** --vault-password-file ***.txt ### run vaulted playbook, without ask a password. Pass in ***.txt
ansible-vault encrypt_string ### encrypt your sting, this string i can input instead password
